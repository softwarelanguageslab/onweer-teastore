openapi: 3.1.0
info:
  contact: {}
  description: The WebUI for the TeaStore benchmark application
  title: "TeaStore WebUI"
  version: "0.1"
servers:
  - description: Local
    url: "http://localhost:8080/tools.descartes.teastore.webui/rest/"

components:
  schemas:
    Product:
      type: "object"
      required:
        - "id"
        - "cateogryId"
        - "name"
        - "description"
        - "listPriceInCents"
      additionalProperties: false
      properties:
        id:
          type: "integer"
          format: "int64"
        categoryId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        listPriceInCents:
          type: "integer"
          format: "int64"
    OrderItem:
      type: "object"
      required:
        - "id"
        - "productId"
        - "orderId"
        - "quantity"
        - "unitPriceInCents"
      additionalProperties: false
      properties:
        id:
          type: "integer"
          format: "int64"
        productId:
          type: "integer"
          format: "int64"
        orderId:
          type: "integer"
          format: "int64"
        quantity:
          type: "integer"
          format: "int32"
        unitPriceInCents:
          type: "integer"
          format: "int64"
    Category:
      type: "object"
      required:
        - "id"
        - "name"
        - "description"
      additionalProperties: false
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
    Order:
      type: "object"
      required:
        - "id"
        - "userId"
        - "time"
        - "totalPriceInCents"
      additionalProperties: false
      properties:
        id:
          type: "integer"
          format: "int64"
        userId:
          type: "integer"
          format: "int64"
        time:
          type: "string"
        totalPriceInCents:
          type: "integer"
          format: "int64"
    User:
      type: "object"
      required:
        - "id"
        - "userName"
        - "password"
        - "realName"
        - "email"
      additionalProperties: false
      properties:
        id:
          type: "integer"
          format: "int64"
        userName:
          type: "string"
        password:
          type: "string"
        realName:
          type: "string"
        email:
          type: "string"
    CartResponse:
      type: "object"
      required:
        - "orderItems"
        - "products"
        - "productImages"
        - "ads"
      properties:
        orderItems:
          type: "array"
          items:
            $ref: "#/components/schemas/OrderItem"
        products:
          type: "object"
          patternProperties:
            "^[0-9]+$":
              $ref: "#/components/schemas/Product"
        productImages:
          type: "object"
          patternProperties:
            "^[0-9]+$":
              type: "string"
        ads:
          type: "array"
          items:
            $ref: "#/components/schemas/Product"
    UpdateQuantity:
      type: "object"
      required:
        - "pid"
        - "quantity"
      additionalProperties: false
      properties:
        pid:
          type: "integer"
          format: "int64"
        quantity:
          type: "integer"
          format: "int32"
    SessionBlob:
      type: "object"
      properties: { }

paths:
  ## CART ##
  /cart:
    get:
      summary: "Get the current contents of the cart"
      operationId: "getOrderItems"
      parameters:
        - name: "sessionBlob"
          in: "cookie"
          required: true
          schema:
            $ref: "#/components/schemas/SessionBlob"
      responses:
        "200":
          description: "Current contents of the cart"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/CartResponse"
  /cart/add:
    post:
      summary: "Add an item to the cart by its productId"
      operationId: "addToCart"
      parameters:
        - name: "productId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sessionBlob"
          in: "cookie"
          required: true
          schema:
            $ref: "#/components/schemas/SessionBlob"
      responses:
        "200":
          description: "Item successfully added"
        "404":
          description: "Product with given ID does not exist"
  /cart/remove:
    post:
      summary: "Remove an item from the cart by its productId"
      operationId: "removeProduct"
      parameters:
        - name: "productId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sessionBlob"
          in: "cookie"
          required: true
          schema:
            $ref: "#/components/schemas/SessionBlob"
      responses:
        "200":
          description: "Item successfully removed"
        "404":
          description: "Product with given ID does not exist"
  /cart/update_quantity:
    post:
      summary: "Update the quantity of specified items in the cart"
      operationId: "updateCartQuantities"
      parameters:
        - name: "sessionBlob"
          in: "cookie"
          required: true
          schema:
            $ref: "#/components/schemas/SessionBlob"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "array"
              items:
                $ref: "#/components/schemas/UpdateQuantity"
      responses:
        "200":
          description: "Quantity in cart succesfully updated"
        "400":
          description: "Requested to update the quantity of an item not in cart"

  ## CATEGORY ##
  /category:
    get:
      summary: "Get a list of categories"
      operationId: "getCategory"
      responses:
        "200":
          description: "A list of categories"
          content:
            'application/json':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Category"

  ## LOGIN/LOGOUT ##
  /login:
    post:
      summary: "Log into TeaStore"
      operationId: "login"
      parameters:
        - name: "sessionBlob"
          in: "cookie"
          required: true
          schema:
            $ref: "#/components/schemas/SessionBlob"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "username"
                - "password"
              additionalProperties: false
              properties:
                username:
                  type: "string"
                  pattern: "^user[0-9][0-9]$" # Usernames are always e.g. "user32"
                password:
                  type: "string"
                  enum: ["password"] # Password is always password
        required: true
      responses:
        "200":
          description: "Logged in succesfully"
        "403":
          description: "Incorrect username or password"
        "400":
          description: "Missing username or password"

  /logout:
    post:
      summary: "Log out of TeaStore"
      operationId: "logout"
      parameters:
        - name: "sessionBlob"
          in: "cookie"
          required: true
          schema:
            $ref: "#/components/schemas/SessionBlob"
      responses:
        "200":
          description: "Logged out successfully"

  ## ORDER ##
  /order/confirm:
    post:
      summary: "Confirm an order with the current cart contents"
      operationId: "confirmOrder"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "address"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "cardtype"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "cardnumber"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "expiry"
          in: "query"
          required: true
          schema:
            type: "string"
            enum: ["04/1999"]
        - name: "sessionBlob"
          in: "cookie"
          required: true
          schema:
            $ref: "#/components/schemas/SessionBlob"
      responses:
        "200":
          description: "Order successfully confirmed"
        "403":
          description: "Not logged in"

  ## PRODUCT ##
  /product:
    get:
      summary: "Get info of specified product"
      operationId: "getProduct"
      parameters:
        - name: "product"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "sessionBlob"
          in: "cookie"
          required: false
          schema:
            $ref: "#/components/schemas/SessionBlob"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "object"
                required:
                  - "product"
                  - "productImage"
                properties:
                  product:
                    $ref: "#/components/schemas/Product"
                  productImage:
                    type: "string"
                  ads:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Product"
                  adImages:
                    type: "array"
                    items:
                      type: "string"
        "400":
          description: "Invalid product ID"
        "404":
          description: "Product with given ID does not exist"

  /products:
    get:
      summary: "List all products in a category"
      operationId: "getProducts"
      parameters:
        - name: "category"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "object"
                required:
                  - "products"
                  - "productImages"
                properties:
                  products:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Product"
                  productImages:
                    type: "object"
                    patternProperties:
                      "^[0-9]+$":
                        type: "string"
        "404":
          description: "Category with given ID does not exist"

  ## PROFILE ##
  /profile:
    get:
      summary: "Get profile info of the current user"
      operationId: "getProfile"
      parameters:
        - name: "sessionBlob"
          in: "cookie"
          required: true
          schema:
            $ref: "#/components/schemas/SessionBlob"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                type: "object"
                required:
                  - "user"
                  - "orders"
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  orders:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Order"
